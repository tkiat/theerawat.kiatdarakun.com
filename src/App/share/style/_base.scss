@use "./functions" as f;
@use "./mixins" as m;

*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  font-size: clamp(14px, 1.5vw, 32px);

  width: 100%;
  height: 100%;
  box-sizing: border-box;
  overflow: hidden;
}

body {
  margin: 0;
  height: 100%;
  overflow: hidden;
  font-family: Lato, sans-serif;
}

h1, h2, h3, a, button, strong, b {
  font-family: Raleway, sans-serif;
  font-feature-settings: "lnum";
  /*font-kerning: none;*/
}

.root {
  --sidebar-width: max(300px, 30vw);

  width: calc(100% + var(--sidebar-width));
  height: 100%;
  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  &.move {
    transform: translateX(calc(-1 * var(--sidebar-width)));
    & .main .sidebar {
      filter: none;
      visibility: visible;
      transition: initial;
    }
  }
}

.app {
  &[data-time="day"] {
    --dark: 0;
  }
  &[data-time="dark"] {
    --dark: 1;
  }

  @include m.fluid-type(--nav-tube-height, 768px, 1920px, 60px, 150px);

  @include m.hsl(--background-color, 0, 0%, f.dayOrDark(97%, 3%));
  @include m.hsl(--duck-beak-color, 270, 0%, f.dayOrDark(50%, 40%));
  @include m.hsl(--duck-wing-color, 90, 0%, f.dayOrDark(50%, 40%));

  display: flex;
  flex-direction: row;
  position: relative;
  height: 100%;
  width: 100%;
  z-index: 12345;

  color: var(--color);
  background-color: var(--background-color);

  ::selection {
    @include m.hsl(background-color, 0, 0%, f.dayOrDark(5%, 95%));
    @include m.hsl(color, 0, 0%, f.dayOrDark(95%, 5%));
  }

  &.waiting {
    cursor: not-allowed;
    &:active {
      opacity: 0.7;
      pointer-events: none;
      &::before,
      &::after {
        position: absolute;
        left: calc(40% - var(--sidebar-width) / 2);
        top: 50%;
        z-index: 1;
        width: 20%;
        height: 1em;

        content: "";
        background-color: red;
      }
      &::before {
        transform: rotate(45deg);
      }
      &::after {
        transform: rotate(-45deg);
      }
    }
  }
  &__main {
    display: flex;

    #background {
      position: absolute;
      top: 0;
      left: 0;

      width: calc(100% - var(--sidebar-width));
      height: 100%;

      background-image: var(--background-image);
      opacity: f.dayOrDark(0.08, 0.05);
      pointer-events: none;
      z-index: -1;
    }
  }
}

a {
  color: var(--color);
  @include m.hsl(text-decoration-color, 180, 0%, f.dayOrDark(25%, 75%));
  &:hover {
    @include m.hsl(text-decoration-color, 180, 0%, f.dayOrDark(50%, 25%));
  }
}

a:focus,
button:focus {
  outline: none;
  &:focus-visible {
    outline: 3px solid red;
    filter: none !important;
    z-index: 9;
  }
}

input[type="range"] {
  -webkit-appearance: none;
  cursor: pointer;
  height: 24px;

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: 20px;
    width: 20px;
    background: url(@assets/duck/duck.svg);
    background-size: 100%;
  }
  &:disabled {
    cursor: not-allowed;
    &::-webkit-slider-thumb {
      background: none;
    }
    &::-webkit-slider-runnable-track {
      background: #333;
    }
    &::-moz-range-thumb {
      background: none;
    }
    &::-moz-range-track {
      background: #333;
    }
  }
  &::-webkit-slider-runnable-track {
    background: #ddd;
    border: 2px solid black;
  }
  &::-moz-range-thumb {
    height: 100%;
    width: 20px;
    background: url(@assets/duck/duck.svg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100%;
    border: none;
  }
  &::-moz-range-track {
    background: #ddd;
    height: 20px;
    border: 2px solid black;
  }
}

.display-linebreak {
  white-space: pre-line;
}

.ul-more-space {
  & li {
    line-height: 1.2;
    margin-bottom: 0.4em;
  }
}

.abandoned {
  opacity: 0.5;
}

@mixin app-and-selector() {
/*   fields to be shared between the whole app and place selector in the settings menu */
  @include m.hsl(--highlight-color, 0, 0%, f.dayOrDark(25%, 75%));
  @include m.hsl(--color, 0, 0%, f.dayOrDark(5%, 95%));

  @include m.hsl(--duck-body-color, 180, 0%, f.dayOrDark(50%, 40%));
  @include m.hsl(--tube-stroke-color, 0, 0%, f.dayOrDark(25%, 85%));
  @include m.hsla(--tube-water-color, 180, 0%, f.dayOrDark(50%, 30%), 0.9);
}

[data-location="ocean"] {
  --background-image: url("@assets/background/ocean.svg");
  --hue: 210;
  --saturation: 100%;
  @include app-and-selector;
}
[data-location="desert"] {
  --background-image: url("@assets/background/desert.svg");
  --hue: 30;
  --saturation: 100%;
  @include app-and-selector;
}
[data-location="sakura"] {
  --background-image: url("@assets/background/sakura.svg");
  --hue: 330;
  --saturation: 100%;
  @include app-and-selector;
}
[data-location="snow"] {
  --background-image: url("/assets/background/snow.svg");
  --hue: 0;
  --saturation: 0%;
  @include app-and-selector;
}
